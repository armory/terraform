# ElastiCache

This script creates an ElastiCache cluster using a Redis engine using **AWS** as a Provider based on an already existing vpc using it subnet id.	

## Variables

In the file "terraform.tfvars" you need to set some variables in order to execute properly.


-subnet-1-cidr: the eks subnet cluster
-subnet-2-cidr = the eks subnet cluster
-availability_zones: zones where a node of the cluster will be available. This needs to be equal or less than the number of nodes in the cluster
-security_group_ids: The eks nodes sg


## How to Use

    terraform init 
    terraform plan -var-file=terraform.tfvars
    terraform apply -var-file=terraform.tfvars

You can rename the current file by clicking the file name in the navigation bar or by clicking the **Rename** button in the file explorer.

## Result

After run the script the infrastructure should be created and the output is the primary endpoint of the ElastiCache cluster.


## Configuring spinnaker with the cluster
To configure spinnaker to use this cluster follow:

Using elasticache in aws eks cluster:
Run terraformer scripts: 	Need to output the dns endpoint

If terraformer enabled: 		add to terraformer-local.yml
		  redis:
		  	host: <elasticache-endpoint>
			port: <port>
if dinghy enabled: 		add to dinghy-local.yml
	services:
		redis:
	  		address: <elasticache-endpoint>

On redis.yml
overrideBaseUrl: redis://<elasticache-endpoint>:<port>
skipLifeCycleManagement: true

Disable automatic Redis configuration in Gate by adding the following to your gate-local.yml file:
   redis:
     configuration:
       secure: true


kubectl -n spinnaker delete deployment spin-redis


